---
import { supabase } from '../lib/supabase';
---

<div class="fixed top-4 right-4 z-50">
  <button
    id="auth-button"
    class="bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded"
  >
    Admin Login
  </button>
</div>

<!-- Auth Modal -->
<div id="auth-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
  <div class="bg-gray-800 p-8 rounded-lg max-w-md w-full mx-4">
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-2xl font-bold text-white" id="modal-title">Login</h2>
      <button id="close-modal" class="text-gray-400 hover:text-white">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <form id="auth-form" class="space-y-4">
      <div>
        <label class="block text-sm font-medium text-gray-300 mb-1">Email</label>
        <input
          type="email"
          id="email"
          required
          class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-orange-500"
        />
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-300 mb-1">Password</label>
        <input
          type="password"
          id="password"
          required
          class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-orange-500"
        />
      </div>
      <div class="flex justify-between items-center">
        <button
          type="submit"
          class="bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded"
        >
          Login
        </button>
        <button
          type="button"
          id="toggle-mode"
          class="text-orange-500 hover:text-orange-400 text-sm"
        >
          Create account
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  import { supabase } from '../lib/supabase';

  const authButton = document.getElementById('auth-button');
  const authModal = document.getElementById('auth-modal');
  const closeModal = document.getElementById('close-modal');
  const authForm = document.getElementById('auth-form');
  const toggleMode = document.getElementById('toggle-mode');
  const modalTitle = document.getElementById('modal-title');
  let isLoginMode = true;

  // Show/hide modal
  authButton?.addEventListener('click', () => {
    authModal?.classList.remove('hidden');
  });

  closeModal?.addEventListener('click', () => {
    authModal?.classList.add('hidden');
  });

  // Close modal when clicking outside
  authModal?.addEventListener('click', (e) => {
    if (e.target === authModal) {
      authModal.classList.add('hidden');
    }
  });

  // Toggle between login and register
  toggleMode?.addEventListener('click', () => {
    isLoginMode = !isLoginMode;
    if (modalTitle) {
      modalTitle.textContent = isLoginMode ? 'Login' : 'Register';
    }
    if (toggleMode) {
      toggleMode.textContent = isLoginMode ? 'Create account' : 'Back to login';
    }
  });

  // Handle form submission
authForm?.addEventListener('submit', async (e) => {
  e.preventDefault();
  const email = (document.getElementById('email') as HTMLInputElement)?.value;
  const password = (document.getElementById('password') as HTMLInputElement)?.value;
  
  try {
    let result;
    if (isLoginMode) {
      result = await supabase.auth.signInWithPassword({
        email,
        password
      });
    } else {
      result = await supabase.auth.signUp({
        email,
        password
      });
    }

    console.log(result); // Tambahkan log ini untuk memeriksa hasil

    if (result.error) throw result.error;

    // Show success message
    const message = isLoginMode ? 'Login successful!' : 'Registration successful! You can now log in.';
    alert(message);

    // Close modal
    authModal?.classList.add('hidden');

    // Redirect to dashboard if logged in
    if (isLoginMode && result.data.user) {
      window.location.href = '/admin/dashboard';
    }
  } catch (error) {
    alert(`Error: ${error.message}`);
  }
});
</script>